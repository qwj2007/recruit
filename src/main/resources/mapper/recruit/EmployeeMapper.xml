<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recruit.web.mapper.recruit.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.recruit.web.pojo.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="truename" jdbcType="VARCHAR" property="truename" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createuserid" jdbcType="VARCHAR" property="createuserid" />
    <result column="updateuserid" jdbcType="VARCHAR" property="updateuserid" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="isactive" jdbcType="BIT" property="isactive" />
    <result column="photourl" jdbcType="VARCHAR" property="photourl" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, password, truename, sex, createtime, createuserid, updateuserid, updatetime, 
    isactive, photourl, email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getEmployeeByNamePwd" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where (userid = #{userid,jdbcType=VARCHAR} or email=#{userid,jdbcType=VARCHAR}) and password=#{password,jdbcType=VARCHAR} and isactive=1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.recruit.web.pojo.Employee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee (userid, password, truename, 
      sex, createtime, createuserid, 
      updateuserid, updatetime, isactive, 
      photourl, email)
    values (#{userid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{createuserid,jdbcType=VARCHAR}, 
      #{updateuserid,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{isactive,jdbcType=BIT}, 
      #{photourl,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.web.pojo.Employee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="truename != null">
        truename,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createuserid != null">
        createuserid,
      </if>
      <if test="updateuserid != null">
        updateuserid,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="isactive != null">
        isactive,
      </if>
      <if test="photourl != null">
        photourl,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null">
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        #{updateuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null">
        #{isactive,jdbcType=BIT},
      </if>
      <if test="photourl != null">
        #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.web.pojo.Employee">
    update employee
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="truename != null">
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null">
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        updateuserid = #{updateuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null">
        isactive = #{isactive,jdbcType=BIT},
      </if>
      <if test="photourl != null">
        photourl = #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.web.pojo.Employee">
    update employee
    set userid = #{userid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      truename = #{truename,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuserid = #{createuserid,jdbcType=VARCHAR},
      updateuserid = #{updateuserid,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      isactive = #{isactive,jdbcType=BIT},
      photourl = #{photourl,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>